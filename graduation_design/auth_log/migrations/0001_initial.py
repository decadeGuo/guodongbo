# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2018-04-09 14:33
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.IntegerField(default=0, verbose_name='\u7528\u6237\u7ea7\u522b')),
                ('position', models.CharField(default='', max_length=50, verbose_name='\u804c\u4f4d')),
                ('depart', models.CharField(default='', max_length=50, verbose_name='\u90e8\u95e8')),
                ('sex', models.IntegerField(default=0, verbose_name='\u6027\u522b')),
                ('phone', models.CharField(default='', max_length=20, verbose_name='\u7535\u8bdd')),
                ('id_card', models.IntegerField(default=0, verbose_name='\u8eab\u4efd\u8bc1\u53f7')),
                ('login_num', models.IntegerField(default=0, verbose_name='\u767b\u5f55\u6b21\u6570')),
                ('login_status', models.SmallIntegerField(default=0, verbose_name='\u767b\u5f55\u72b6\u6001')),
                ('p_id', models.IntegerField(default=0, verbose_name='\u804c\u4f4did')),
                ('d_id', models.IntegerField(default=0, verbose_name='\u90e8\u95e8id')),
                ('status', models.SmallIntegerField(default=1, verbose_name='\u8d26\u53f7\u72b6\u6001')),
                ('adress', models.CharField(default='', max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
                'verbose_name': '\u7528\u6237\u8868',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Depatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='\u90e8\u95e8')),
                ('status', models.SmallIntegerField(default=1, verbose_name='\u72b6\u6001')),
            ],
            options={
                'db_table': 'department',
                'verbose_name': '\u90e8\u95e8\u8868',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='\u804c\u4f4d')),
                ('status', models.SmallIntegerField(default=1, verbose_name='\u72b6\u6001')),
            ],
            options={
                'db_table': 'position',
                'verbose_name': '\u804c\u4f4d\u8868',
            },
        ),
        migrations.CreateModel(
            name='UserSign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(default=0)),
                ('status', models.IntegerField(default=0)),
                ('addtime', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'user_sign',
                'verbose_name': '\u7b7e\u5230\u8868',
            },
        ),
    ]
